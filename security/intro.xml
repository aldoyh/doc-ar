<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
 <chapter xml:id="security.intro" xmlns="http://docbook.org/ns/docbook">
  <title>مقدمة</title>
  <simpara>
   PHP هي لغة قوية والمفسر، سواء تم تضمينه
   في خادم ويب كوحدة أو تم تنفيذه كملف
   <acronym>CGI</acronym> ثنائي منفصل، قادر على الوصول إلى الملفات وتنفيذ
   الأوامر وفتح اتصالات الشبكة على الخادم. هذه
   الخصائص تجعل أي شيء يعمل على خادم ويب غير آمن افتراضيًا.
   تم تصميم PHP خصيصًا لتكون لغة أكثر أمانًا
   لكتابة برامج <acronym>CGI</acronym> من Perl أو C، ومع الاختيار الصحيح لخيارات
   تكوين وقت التجميع ووقت التشغيل، والممارسات الصحيحة للبرمجة،
   يمكن أن تمنحك بالضبط مزيج الحرية والأمان
   الذي تحتاجه.
  </simpara>
  <simpara>
   نظرًا لوجود العديد من الطرق المختلفة لاستخدام PHP، هناك العديد من
   خيارات التكوين التي تتحكم في سلوكها. مجموعة كبيرة
   من الخيارات تضمن أنه يمكنك استخدام PHP لأغراض كثيرة،
   ولكن هذا يعني أيضًا أن هناك مجموعات من هذه
   الخيارات وتكوينات الخادم التي تؤدي إلى إعداد
   غير آمن.
  </simpara>
  <simpara>
   مرونة التكوين في PHP تنافسها بالتساوي مرونة
   الكود. يمكن استخدام PHP لبناء تطبيقات خادم كاملة،
   بكل قوة مستخدم shell، أو يمكن استخدامها
   لتضمينات بسيطة من جانب الخادم مع خطر ضئيل في بيئة
   محكومة بإحكام. كيفية بناء تلك البيئة، ومدى
   أمانها، يعتمد إلى حد كبير على مطور PHP.
  </simpara>
  <simpara>
   يبدأ هذا الفصل ببعض نصائح الأمان العامة، ويشرح
   مجموعات خيارات التكوين المختلفة والمواقف
   التي يمكن استخدامها بأمان فيها، ويصف الاعتبارات المختلفة في
   البرمجة لمستويات مختلفة من الأمان.
  </simpara>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
