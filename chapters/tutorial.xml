<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
 <chapter xml:id="tutorial" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info><title>درس بسيط</title></info>

  <para>
   نود هنا أن نعرض الأساسيات الأساسية لـ PHP في درس قصير وبسيط.
   يتعامل هذا النص فقط مع إنشاء صفحات ويب ديناميكية باستخدام
   PHP، على الرغم من أن PHP ليست قادرة على إنشاء صفحات الويب فقط. راجع
   القسم المعنون <link linkend="intro-whatcando">ماذا يمكن لـ PHP
   أن تفعل</link> لمزيد من المعلومات.
  </para>
  <para>
   تُعامل صفحات الويب الممكّنة لـ PHP تمامًا مثل صفحات HTML العادية ويمكنك
   إنشاءها وتحريرها بنفس الطريقة التي تنشئ بها عادةً
   صفحات HTML العادية.
  </para>

  <section xml:id="tutorial.requirements">
   <info><title>ماذا أحتاج؟</title></info>
   <para>
    في هذا الدرس نفترض أن خادمك قد فعّل الدعم
    لـ PHP وأن جميع الملفات المنتهية بـ <filename class="extension">.php</filename>
    تُعالج بواسطة PHP. على معظم الخوادم، هذا هو الامتداد الافتراضي
    لملفات PHP، ولكن اسأل مسؤول الخادم للتأكد. إذا كان
    خادمك يدعم PHP، فلا تحتاج إلى فعل أي شيء. فقط
    أنشئ ملفات <filename class="extension">.php</filename> الخاصة بك، وضعها في
    دليل الويب الخاص بك وسيقوم الخادم تلقائيًا بتحليلها لك.
    لا حاجة لتجميع أي شيء ولا تحتاج إلى تثبيت
    أي أدوات إضافية. فكر في هذه الملفات الممكّنة لـ PHP كملفات HTML
    بسيطة مع عائلة جديدة كاملة من الوسوم السحرية التي تتيح لك القيام بجميع
    أنواع الأشياء.
   </para>
   <para>
    لنفترض أنك تريد توفير النطاق الترددي الثمين والتطوير محليًا.
    في هذه الحالة، سترغب في تثبيت خادم ويب، مثل
    <link xlink:href="&url.apache;">Apache</link>، وبالطبع
    <link xlink:href="&url.php.downloads;">PHP</link>. على الأرجح سترغب
    في تثبيت قاعدة بيانات أيضًا، مثل
    <link xlink:href="&url.mysql.docs;">MySQL</link>.
   </para>
   <para>
    يمكنك إما تثبيت هذه بشكل فردي أو اختيار طريقة أبسط.
    يحتوي دليلنا على <link linkend="install">تعليمات التثبيت لـ
    PHP</link> (بافتراض أن لديك بالفعل خادم ويب معد). إذا
    واجهت مشاكل في تثبيت PHP بنفسك، فنقترح عليك طرح
    أسئلتك على <link xlink:href="&url.php.mailing-lists;">قائمة
    البريد الخاصة بالتثبيت</link>. إذا اخترت الطريق الأبسط، فإذن
    <link xlink:href="&url.installkits;">ابحث عن حزمة مهيأة مسبقًا</link>
    لنظام التشغيل الخاص بك، والتي تثبت كل هذه تلقائيًا
    بنقرات قليلة فقط بالماوس. من السهل إعداد خادم ويب مع دعم PHP
    على أي نظام تشغيل، بما في ذلك MacOSX وLinux وWindows.
    على Linux، قد تجد <link xlink:href="&url.rpmfind;">rpmfind</link> و
    <link xlink:href="&url.rpmfind.pbone;">PBone</link> مفيدة
    لتحديد موقع RPMs. قد ترغب أيضًا في زيارة <link
     xlink:href="&url.apt-get;">apt-get</link> للعثور على حزم لـ Debian.
   </para>
  </section>

  <section xml:id="tutorial.firstpage">
   <info><title>صفحتك الأولى الممكّنة لـ PHP</title></info>
   <para>
    أنشئ ملفًا يسمى <filename>hello.php</filename> وضعه
    في دليل جذر خادم الويب الخاص بك (<varname>DOCUMENT_ROOT</varname>)
    بالمحتوى التالي:
   </para>
   <para>
    <example>
     <info><title>برنامجنا النصي الأول لـ PHP: <filename>hello.php</filename></title></info>
     <programlisting role="php">
<![CDATA[
<?php

echo "Hello World!";

?>
]]>
     </programlisting>
     <simpara>
      استخدم متصفحك للوصول إلى الملف باستخدام URL خادم الويب الخاص بك، وانتهاءً
      بمرجع الملف <literal>/hello.php</literal>. عند التطوير محليًا سيكون هذا
      الـ URL شيئًا مثل <literal>http://localhost/hello.php</literal>
      أو <literal>http://127.0.0.1/hello.php</literal> ولكن هذا يعتمد على
      تكوين خادم الويب. إذا تم تكوين كل شيء بشكل صحيح، سيتم
      تحليل هذا الملف بواسطة PHP وسترى إخراج "Hello World" معروضًا
      في متصفحك.
     </simpara>
     <simpara>
      يمكن تضمين PHP ضمن صفحة ويب HTML عادية. هذا يعني داخل مستند HTML الخاص بك
      يمكنك كتابة عبارات PHP، كما هو موضح في المثال التالي:
     </simpara>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE html>
<html>
    <head>
        <title>PHP Test</title>
    </head>
    <body>
        <?php echo '<p>Hello World</p>'; ?>
    </body>
</html>
]]>
     </programlisting>
     <simpara>
      سينتج عن هذا الإخراج التالي:
     </simpara>
     <screen role="html">
<![CDATA[
<!DOCTYPE html>
<html>
    <head>
        <title>PHP Test</title>
    </head>
    <body>
        <p>Hello World</p>
    </body>
</html>
]]>
     </screen>
    </example>
   </para>
   <para>
    هذا البرنامج بسيط للغاية ولم تكن بحاجة حقًا إلى استخدام
    PHP لإنشاء صفحة مثل هذه. كل ما يفعله هو عرض:
    <literal>Hello World</literal> باستخدام عبارة <function>echo</function> في PHP.
    لاحظ أن الملف <emphasis>لا يحتاج إلى أن يكون قابلاً للتنفيذ</emphasis>
    أو خاصًا بأي شكل من الأشكال. يكتشف الخادم أن هذا الملف يحتاج إلى تفسيره
    بواسطة PHP لأنك استخدمت امتداد ".php"، والذي تم تكوين الخادم
    لتمريره إلى PHP. فكر في هذا كملف HTML عادي يحتوي على
    مجموعة من الوسوم الخاصة المتاحة لك والتي تقوم بالعديد من الأشياء المثيرة للاهتمام.
   </para>
   <para>
    إذا جربت هذا المثال ولم يخرج أي شيء، أو طلب
    التنزيل، أو رأيت الملف بأكمله كنص، فمن المحتمل أن
    الخادم الذي تستخدمه لا يدعم PHP، أو لم يتم تكوينه بشكل صحيح.
    اطلب من مسؤولك تمكينه لك باستخدام فصل
    <link linkend="install">التثبيت</link>
    من الدليل. إذا كنت تطور محليًا، اقرأ أيضًا فصل
    التثبيت للتأكد من أن كل شيء مكوّن
    بشكل صحيح. تأكد من أنك تصل إلى الملف عبر http مع الخادم
    الذي يوفر لك الإخراج. إذا قمت فقط باستدعاء الملف من نظام
    الملفات الخاص بك، فلن يتم تحليله بواسطة PHP. إذا استمرت المشاكل على أي حال،
    لا تتردد في استخدام إحدى الخيارات العديدة لـ
    <link xlink:href="&url.php.support;">دعم PHP</link>.
   </para>
   <para>
    نقطة المثال هي إظهار تنسيق وسم PHP الخاص.
    في هذا المثال استخدمنا <literal>&lt;?php</literal> للإشارة إلى
    بداية وسم PHP. ثم وضعنا عبارة PHP وغادرنا وضع PHP عن طريق
    إضافة وسم الإغلاق، <literal>?&gt;</literal>. يمكنك القفز
    داخل وخارج وضع PHP في ملف HTML مثل هذا في أي مكان تريده. لمزيد من
    التفاصيل، اقرأ قسم الدليل حول <link linkend="language.basic-syntax">
    بناء جملة PHP الأساسي</link>.
   </para>

   <note>
    <info><title>ملاحظة حول تغذية الأسطر</title></info>
    <para>
     لتغذية الأسطر معنى ضئيل في HTML، ومع ذلك لا يزال من الجيد
     جعل HTML الخاص بك يبدو جميلًا ونظيفًا بوضع تغذية الأسطر. سيتم إزالة
     تغذية السطر التي تلي مباشرة وسم الإغلاق
     <literal>?&gt;</literal> بواسطة PHP. يمكن أن يكون هذا مفيدًا
     للغاية عندما تضع العديد من كتل PHP أو ملفات التضمين
     التي تحتوي على PHP والتي لا يُفترض بها إخراج أي شيء. في الوقت نفسه
     يمكن أن يكون مربكًا بعض الشيء. يمكنك وضع مسافة بعد وسم الإغلاق
     <literal>?&gt;</literal> لفرض مسافة وتغذية سطر ليتم إخراجها،
     أو يمكنك وضع تغذية سطر صريحة في آخر echo/print من داخل
     كتلة PHP الخاصة بك.
    </para>
   </note>

   <note>
    <info><title>ملاحظة حول محررات النصوص</title></info>
    <para>
     هناك العديد من محررات النصوص وبيئات التطوير المتكاملة (IDEs)
     التي يمكنك استخدامها لإنشاء وتحرير وإدارة ملفات PHP. يتم الاحتفاظ بقائمة جزئية من
     هذه الأدوات في <link xlink:href="&url.phpeditorlist;">قائمة محررات
     PHP</link>. إذا كنت ترغب في التوصية بمحرر، يرجى زيارة الصفحة أعلاه
     واطلب من مشرف الصفحة إضافة المحرر إلى القائمة. وجود
     محرر مع تمييز بناء الجملة يمكن أن يكون مفيدًا.
    </para>
   </note>

   <note>
    <info><title>ملاحظة حول معالجات النصوص</title></info>
    <para>
     معالجات النصوص مثل StarOffice Writer وMicrosoft Word وAbiword
     ليست مثالية لتحرير ملفات PHP. إذا كنت ترغب في استخدام واحد لهذا
     البرنامج النصي التجريبي، يجب عليك التأكد من حفظ الملف كـ <emphasis>نص
     عادي</emphasis> وإلا لن تتمكن PHP من قراءة وتنفيذ البرنامج النصي.
    </para>
   </note>

   <para>
    الآن بعد أن نجحت في إنشاء برنامج PHP نصي يعمل، حان
    الوقت لإنشاء أشهر برنامج PHP نصي! قم باستدعاء دالة
    <function>phpinfo</function> وسترى الكثير من المعلومات
    المفيدة حول نظامك وإعداداتك مثل <link linkend="language.variables.predefined">المتغيرات المعرفة
    مسبقًا</link> المتاحة، ووحدات PHP المحملة، وإعدادات
    <link linkend="configuration">التكوين</link>.
    خذ بعض الوقت وراجع هذه المعلومات المهمة.
   </para>
   <para>
    <example>
     <info><title>الحصول على معلومات النظام من PHP</title></info>
     <programlisting role="php">
<![CDATA[
<?php phpinfo(); ?>
]]>
     </programlisting>
    </example>
   </para>
  </section>

  <section xml:id="tutorial.useful">
   <info><title>شيء مفيد</title></info>
   <para>
    دعونا نفعل شيئًا أكثر فائدة الآن. سنقوم بالتحقق من
    نوع المتصفح الذي يستخدمه الزائر.
    لذلك، نتحقق من سلسلة وكيل المستخدم التي يرسلها المتصفح
    كجزء من طلب HTTP. يتم تخزين هذه المعلومات في <link
    linkend="language.variables">متغير</link>. تبدأ المتغيرات دائمًا
    بعلامة الدولار في PHP. المتغير الذي نهتم به الآن
    هو <varname>$_SERVER['HTTP_USER_AGENT']</varname>.
   </para>
   <note>
    <para>
     <varname>$_SERVER</varname> هو
     متغير PHP محجوز خاص يحتوي على جميع معلومات خادم الويب.
     يُعرف باسم superglobal. راجع صفحة الدليل ذات الصلة حول
     <link linkend="language.variables.superglobals">superglobals</link>
     لمزيد من المعلومات.
    </para>
   </note>
   <para>
    لعرض هذا المتغير، يمكنك ببساطة القيام بما يلي:
   </para>
   <para>
    <example>
     <info><title>طباعة متغير (عنصر مصفوفة)</title></info>
    <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['HTTP_USER_AGENT'];
?>
]]>
    </programlisting>
    <para>
     قد يكون إخراج عينة من هذا البرنامج النصي:
    </para>
    <screen role="html">
<![CDATA[
Mozilla/5.0 (Linux) Firefox/112.0
]]>
    </screen>
   </example>
   </para>
   <para>
    هناك العديد من <link linkend="language.types">الأنواع</link> من
    المتغيرات المتاحة في PHP. في المثال أعلاه طبعنا عنصرًا
    من متغير <link linkend="language.types.array">مصفوفة</link>.
    يمكن أن تكون المصفوفات مفيدة جدًا.
   </para>
   <para>
    <varname>$_SERVER</varname> هو مجرد متغير واحد تجعله PHP متاحًا
    لك تلقائيًا. يمكن رؤية قائمة في قسم
    <link linkend="reserved.variables">المتغيرات المحجوزة</link>
    من الدليل أو يمكنك الحصول على قائمة كاملة بها عن طريق النظر في
    إخراج دالة <function>phpinfo</function> المستخدمة في
    المثال في القسم السابق.
   </para>
   <para>
    يمكنك وضع عدة عبارات PHP داخل وسم PHP وإنشاء
    كتل صغيرة من الكود تقوم بأكثر من مجرد echo واحد.
    على سبيل المثال، إذا كنت تريد التحقق من Firefox يمكنك
    القيام بهذا:
   </para>
   <para>
    <example>
     <info><title>مثال باستخدام <link linkend="language.control-structures">هياكل
     التحكم</link> و<link linkend="language.functions">الدوال</link></title></info>
     <programlisting role="php">
<![CDATA[
<?php
if (str_contains($_SERVER['HTTP_USER_AGENT'], 'Firefox')) {
    echo 'You are using Firefox.';
}
?>
]]>
     </programlisting>
     <para>
      قد يكون إخراج عينة من هذا البرنامج النصي:
     </para>
     <screen role="html">
<![CDATA[
You are using Firefox.
]]>
     </screen>
    </example>
   </para>
   <para>
    هنا نقدم مفهومين جديدين. لدينا عبارة
    <link linkend="control-structures.if">if</link>.
    إذا كنت على دراية ببناء الجملة الأساسي المستخدم في لغة C،
    فيجب أن يبدو هذا منطقيًا لك. خلاف ذلك،
    يجب عليك على الأرجح الحصول على كتاب PHP تمهيدي وقراءة
    فصلين أو ثلاثة أولى، أو قراءة جزء <link linkend="langref">مرجع
    اللغة</link> من الدليل.
   </para>
   <para>
    المفهوم الثاني الذي قدمناه كان استدعاء دالة <function>str_contains</function>.
    <function>str_contains</function> هي دالة مدمجة في
    PHP تحدد ما إذا كانت سلسلة معينة تحتوي على سلسلة أخرى. في هذه الحالة نبحث
    عن <literal>'Firefox'</literal> (ما يسمى بالإبرة) داخل
    <varname>$_SERVER['HTTP_USER_AGENT']</varname> (ما يسمى بكومة القش). إذا
    تم العثور على الإبرة داخل كومة القش، تُرجع الدالة true. خلاف ذلك،
    تُرجع &false;. إذا أرجعت &true;، فإن تعبير <link
    linkend="control-structures.if">if</link> يُقيَّم إلى &true;
    ويتم تنفيذ الكود داخل {الأقواس المتعرجة}. خلاف ذلك، لا يتم
    تشغيل الكود. لا تتردد في إنشاء أمثلة مماثلة،
    مع <link linkend="control-structures.if">if</link> و
    <link linkend="control-structures.else">else</link>، ودوال
    أخرى مثل <function>strtoupper</function> و
    <function>strlen</function>. تحتوي كل صفحة دليل ذات صلة على أمثلة
    أيضًا. إذا لم تكن متأكدًا من كيفية استخدام الدوال، فسترغب في قراءة كل من
    صفحة الدليل حول <link linkend="about.prototypes">كيفية قراءة
    تعريف دالة</link> والقسم حول
    <link linkend="language.functions">دوال PHP</link>.
   </para>
   <para>
    يمكننا أن نأخذ هذا خطوة أبعد ونظهر كيف يمكنك القفز داخل وخارج
    وضع PHP حتى في منتصف كتلة PHP:
   </para>
   <para>
    <example>
     <info><title>خلط أوضاع HTML وPHP معًا</title></info>
     <programlisting role="php">
<![CDATA[
<?php
if (str_contains($_SERVER['HTTP_USER_AGENT'], 'Firefox')) {
?>
<h3>str_contains() returned true</h3>
<p>You are using Firefox</p>
<?php
} else {
?>
<h3>str_contains() returned false</h3>
<p>You are not using Firefox</p>
<?php
}
?>
]]>
     </programlisting>
     <para>
      قد يكون إخراج عينة من هذا البرنامج النصي:
     </para>
     <screen role="html">
<![CDATA[
<h3>str_contains() returned true</h3>
<p>You are using Firefox</p>
]]>
     </screen>
    </example>
   </para>
   <para>
    بدلاً من استخدام عبارة PHP echo لإخراج شيء ما، قفزنا خارج
    وضع PHP وأرسلنا فقط HTML مباشرة. النقطة المهمة والقوية
    التي يجب ملاحظتها هنا هي أن التدفق المنطقي للبرنامج النصي يبقى سليمًا. فقط
    واحدة من كتل HTML ستنتهي بالإرسال إلى المشاهد اعتمادًا على
    نتيجة <function>str_contains</function>. بمعنى آخر، يعتمد ذلك على
    ما إذا تم العثور على السلسلة <literal>Firefox</literal> أم لا.
   </para>
  </section>

  <section xml:id="tutorial.forms">
   <info><title>التعامل مع النماذج</title></info>
   <para>
    إحدى أقوى ميزات PHP هي الطريقة التي تتعامل بها مع نماذج HTML.
    المفهوم الأساسي المهم فهمه هو أن أي
    عنصر نموذج سيكون متاحًا تلقائيًا لبرامج PHP
    النصية الخاصة بك. يرجى قراءة قسم الدليل حول
    <link linkend="language.variables.external">المتغيرات من مصادر
    خارجية</link> لمزيد من المعلومات والأمثلة حول استخدام النماذج
    مع PHP. فيما يلي مثال على نموذج HTML:
   </para>
   <para>
    <example>
     <info><title>نموذج HTML بسيط</title></info>
     <programlisting role="html">
<![CDATA[
<form action="action.php" method="post">
    <label for="name">Your name:</label>
    <input name="name" id="name" type="text">

    <label for="age">Your age:</label>
    <input name="age" id="age" type="number">

    <button type="submit">Submit</button>
</form>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    لا يوجد شيء خاص في هذا النموذج. إنه نموذج HTML مباشر
    بدون وسوم خاصة من أي نوع. عندما يملأ المستخدم هذا النموذج
    ويضغط على زر الإرسال، يتم استدعاء صفحة <filename>action.php</filename>.
    في هذا الملف ستكتب شيئًا مثل هذا:
   </para>
   <para>
    <example>
     <info><title>طباعة البيانات من نموذجنا</title></info>
     <programlisting role="php">
<![CDATA[
Hi <?php echo htmlspecialchars($_POST['name']); ?>.
You are <?php echo (int) $_POST['age']; ?> years old.
]]>
     </programlisting>
     <para>
      قد يكون إخراج عينة من هذا البرنامج النصي:
     </para>
     <screen role="html">
<![CDATA[
Hi Joe. You are 22 years old.
]]>
     </screen>
    </example>
   </para>
   <para>
    بصرف النظر عن أجزاء <function>htmlspecialchars</function> و
    <literal>(int)</literal>، يجب أن يكون واضحًا ما يفعله هذا.
    تتأكد <function>htmlspecialchars</function> من أن أي أحرف
    خاصة في html يتم ترميزها بشكل صحيح حتى لا يتمكن الأشخاص من حقن وسوم HTML
    أو Javascript في صفحتك. بالنسبة لحقل العمر، بما أننا نعلم أنه
    رقم، يمكننا فقط <link linkend="language.types.typecasting">تحويله</link>
    إلى <type>int</type> والذي سيتخلص تلقائيًا من أي
    أحرف ضالة. يمكنك أيضًا أن تجعل PHP تفعل هذا لك تلقائيًا باستخدام
    إضافة <link linkend="ref.filter">filter</link>.
    يتم تعيين المتغيرات <varname>$_POST['name']</varname> و<varname>$_POST['age']</varname>
    تلقائيًا لك بواسطة PHP. في وقت سابق
    استخدمنا المتغير الشامل الفائق <varname>$_SERVER</varname>؛ أعلاه قدمنا للتو
    المتغير الشامل الفائق <varname>$_POST</varname>
    الذي يحتوي على جميع بيانات POST. لاحظ كيف أن
    <emphasis>طريقة</emphasis> نموذجنا هي POST. إذا استخدمنا
    الطريقة <emphasis>GET</emphasis> فإن معلومات النموذج الخاصة بنا ستكون في
    المتغير الشامل الفائق <varname>$_GET</varname> بدلاً من ذلك.
    يمكنك أيضًا استخدام المتغير الشامل الفائق <varname>$_REQUEST</varname>،
    إذا كنت لا تهتم بمصدر بيانات طلبك. يحتوي على
    المعلومات المدمجة من بيانات GET وPOST وCOOKIE.
   </para>
  </section>

  <section xml:id="tutorial.whatsnext">
   <info><title>ماذا بعد؟</title></info>
   <para>
    بمعرفتك الجديدة يجب أن تكون قادرًا على فهم معظم
    الدليل وأيضًا البرامج النصية المثالية المختلفة المتاحة في
    أرشيفات الأمثلة.
   </para>
   <para>
    لعرض العروض التقديمية المختلفة التي تُظهر المزيد مما يمكن لـ PHP القيام به،
    راجع موقع مواد مؤتمر PHP:
    <link xlink:href="&url.php.talks;">&url.php.talks;</link>
   </para>
  </section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
